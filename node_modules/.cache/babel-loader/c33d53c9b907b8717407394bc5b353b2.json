{"ast":null,"code":"var _jsxFileName = \"D:\\\\USER_PQT\\\\Education\\\\Web_Programing\\\\React - Redux\\\\project02\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      if (this.state.isDisplayForm && this.state.taskEditting !== null) {\n        this.setState({\n          isDisplayForm: true,\n          taskEditting: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          taskEditting: null\n        });\n      }\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      var {\n        tasks\n      } = this.state;\n\n      if (data.id === '') {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        var index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        taskEditting: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      var {\n        tasks\n      } = this.state;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) result = index;\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      var {\n        tasks\n      } = this.state;\n      var index = this.findIndex(id);\n      this.setState({\n        taskEditting: tasks[index]\n      });\n      console.log(id, ' - ', this.state.taskEditting);\n      this.onShowForm();\n    };\n\n    this.state = {\n      tasks: [],\n      // id : unique, name, status\n      isDisplayForm: false,\n      taskEditting: null\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' + '-' + this.s4();\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditting\n    } = this.state;\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      task: taskEditting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), \" \", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fas fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/USER_PQT/Education/Web_Programing/React - Redux/project02/src/App.js"],"names":["React","TaskForm","Control","TaskList","App","Component","constructor","props","onToggleForm","state","isDisplayForm","taskEditting","setState","onCloseForm","onShowForm","onSubmit","data","tasks","id","generateID","push","index","findIndex","localStorage","setItem","JSON","stringify","onUpdateStatus","status","result","forEach","task","onDelete","splice","onUpdate","console","log","UNSAFE_componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm","onFilter"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks : [], // id : unique, name, status\n      isDisplayForm : false,\n      taskEditting : null,\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    if(localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks : tasks,\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' + '-' + this.s4();\n  }\n\n  onToggleForm = () => {\n    if(this.state.isDisplayForm && this.state.taskEditting !== null) {\n      this.setState({\n        isDisplayForm : true,\n        taskEditting : null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm : !this.state.isDisplayForm,\n        taskEditting : null,\n      });\n    }\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm : false,\n    });\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm : true,\n    });\n  }\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if(data.id === '') {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks : tasks,\n      taskEditting : null,\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if(index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks : tasks,\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if(task.id === id) result = index;\n    })\n    return result;\n  }\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if(index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks : tasks,\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  }\n\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    this.setState({\n      taskEditting : tasks[index],\n    });\n\n    console.log(id, ' - ', this.state.taskEditting);\n    this.onShowForm();\n  }\n\n  render() {\n\n    var { tasks, isDisplayForm, taskEditting } = this.state;\n    var elmTaskForm = isDisplayForm \n                        ? <TaskForm\n                            onSubmit={ this.onSubmit }\n                            onCloseForm={ this.onCloseForm }\n                            task={ taskEditting }\n                          /> \n                        : '';\n\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1> <hr />\n        </div>\n        <div className=\"row\">\n          <div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n            { /* Task Form */ }\n            { elmTaskForm }\n          </div>\n          <div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={ this.onToggleForm }\n            >\n               <span className=\"fas fa-plus mr-5\"></span> Thêm công việc\n            </button>\n            { /* Search - Sort */ }\n            <Control />\n            { /* List */ }\n            <TaskList\n              tasks={ tasks }\n              onUpdateStatus={ this.onUpdateStatus }\n              onDelete={ this.onDelete }\n              onUpdate={ this.onUpdate }\n              onFilter={ this.onFilter }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}